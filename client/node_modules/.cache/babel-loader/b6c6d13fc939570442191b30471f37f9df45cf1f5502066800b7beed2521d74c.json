{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api'; // Remplacez par l'URL de votre API\n\n// Créer une instance axios avec la configuration de base\nconst apiClient = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Fonctions pour interagir avec l'API\nexport const taskService = {\n  // Récupérer toutes les tâches\n  getAllTasks: async () => {\n    try {\n      const response = await apiClient.get('/tasks');\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la récupération des tâches:', error);\n      throw error;\n    }\n  },\n  // Ajouter une nouvelle tâche\n  createTask: async taskData => {\n    try {\n      const response = await apiClient.post('/tasks', taskData);\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la création de la tâche:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","apiClient","create","baseURL","headers","taskService","getAllTasks","response","get","data","error","console","createTask","taskData","post"],"sources":["C:/Users/ALIJ/Desktop/EST/deploiement/api-server/client/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api'; // Remplacez par l'URL de votre API\r\n\r\n// Créer une instance axios avec la configuration de base\r\nconst apiClient = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Fonctions pour interagir avec l'API\r\nexport const taskService = {\r\n  // Récupérer toutes les tâches\r\n  getAllTasks: async () => {\r\n    try {\r\n      const response = await apiClient.get('/tasks');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération des tâches:', error);\r\n      throw error;\r\n    }\r\n  },\r\n \r\n  // Ajouter une nouvelle tâche\r\n  createTask: async (taskData) => {\r\n    try {\r\n      const response = await apiClient.post('/tasks', taskData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la création de la tâche:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAC;;AAE7C;AACA,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC7BC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,WAAW,GAAG;EACzB;EACAC,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,SAAS,CAACO,GAAG,CAAC,QAAQ,CAAC;MAC9C,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MAClE,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAE,UAAU,EAAE,MAAOC,QAAQ,IAAK;IAC9B,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMN,SAAS,CAACa,IAAI,CAAC,QAAQ,EAAED,QAAQ,CAAC;MACzD,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MAC/D,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}