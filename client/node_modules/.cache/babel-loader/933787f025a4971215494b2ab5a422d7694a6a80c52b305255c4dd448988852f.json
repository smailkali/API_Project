{"ast":null,"code":"// src/services/api.js\nexport const taskService = {\n  getTasks: async () => {\n    const response = await fetch('http://localhost:5000/api/tasks');\n    if (!response.ok) {\n      throw new Error('Failed to fetch tasks');\n    }\n    return await response.json();\n  },\n  createTask: async task => {\n    const response = await fetch('http://localhost:5000/api/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to create task');\n    }\n    return await response.json();\n  },\n  completeTask: async taskId => {\n    const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/complete`, {\n      method: 'PATCH'\n    });\n    if (!response.ok) {\n      throw new Error('Failed to complete task');\n    }\n    return await response.json();\n  },\n  deleteTask: async taskId => {\n    const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\n      method: 'DELETE'\n    });\n    if (!response.ok) {\n      throw new Error('Failed to delete task');\n    }\n    return await response.json();\n  }\n};","map":{"version":3,"names":["taskService","getTasks","response","fetch","ok","Error","json","createTask","task","method","headers","body","JSON","stringify","completeTask","taskId","deleteTask"],"sources":["C:/Users/ALIJ/Desktop/EST/deploiement/api-server/client/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\nexport const taskService = {\r\n  getTasks: async () => {\r\n    const response = await fetch('http://localhost:5000/api/tasks');\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch tasks');\r\n    }\r\n    return await response.json();\r\n  },\r\n\r\n  createTask: async (task) => {\r\n    const response = await fetch('http://localhost:5000/api/tasks', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(task),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to create task');\r\n    }\r\n\r\n    return await response.json();\r\n  },\r\n\r\n  completeTask: async (taskId) => {\r\n    const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/complete`, {\r\n      method: 'PATCH',\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to complete task');\r\n    }\r\n\r\n    return await response.json();\r\n  },\r\n\r\n  deleteTask: async (taskId) => {\r\n    const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\r\n      method: 'DELETE',\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to delete task');\r\n    }\r\n\r\n    return await response.json();\r\n  },\r\n};\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,WAAW,GAAG;EACzBC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;IAC/D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC;EAEDC,UAAU,EAAE,MAAOC,IAAI,IAAK;IAC1B,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC9DM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;IAC3B,CAAC,CAAC;IAEF,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;IAEA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC;EAEDQ,YAAY,EAAE,MAAOC,MAAM,IAAK;IAC9B,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmCY,MAAM,WAAW,EAAE;MACjFN,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAC5C;IAEA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC;EAEDU,UAAU,EAAE,MAAOD,MAAM,IAAK;IAC5B,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmCY,MAAM,EAAE,EAAE;MACxEN,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;IAEA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}