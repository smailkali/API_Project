{"ast":null,"code":"// src/services/api.js\nexport const taskService={getTasks:async()=>{const response=await fetch('http://localhost:5000/api/tasks');if(!response.ok){throw new Error('Failed to fetch tasks');}return await response.json();},createTask:async task=>{const response=await fetch('http://localhost:5000/api/tasks',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(task)});if(!response.ok){throw new Error('Failed to create task');}return await response.json();},completeTask:async taskId=>{const response=await fetch(`http://localhost:5000/api/tasks/${taskId}/complete`,{method:'PATCH'});if(!response.ok){throw new Error('Failed to complete task');}return await response.json();},deleteTask:async taskId=>{const response=await fetch(`http://localhost:5000/api/tasks/${taskId}`,{method:'DELETE'});if(!response.ok){throw new Error('Failed to delete task');}return await response.json();}};","map":{"version":3,"names":["taskService","getTasks","response","fetch","ok","Error","json","createTask","task","method","headers","body","JSON","stringify","completeTask","taskId","deleteTask"],"sources":["C:/Users/ALIJ/Desktop/EST/deploiement/api-server/client/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\nexport const taskService = {\r\n  getTasks: async () => {\r\n    const response = await fetch('http://localhost:5000/api/tasks');\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch tasks');\r\n    }\r\n    return await response.json();\r\n  },\r\n\r\n  createTask: async (task) => {\r\n    const response = await fetch('http://localhost:5000/api/tasks', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(task),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to create task');\r\n    }\r\n\r\n    return await response.json();\r\n  },\r\n\r\n  completeTask: async (taskId) => {\r\n    const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/complete`, {\r\n      method: 'PATCH',\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to complete task');\r\n    }\r\n\r\n    return await response.json();\r\n  },\r\n\r\n  deleteTask: async (taskId) => {\r\n    const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\r\n      method: 'DELETE',\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to delete task');\r\n    }\r\n\r\n    return await response.json();\r\n  },\r\n};\r\n"],"mappings":"AAAA;AACA,MAAO,MAAM,CAAAA,WAAW,CAAG,CACzBC,QAAQ,CAAE,KAAAA,CAAA,GAAY,CACpB,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,iCAAiC,CAAC,CAC/D,GAAI,CAACD,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuB,CAAC,CAC1C,CACA,MAAO,MAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAC9B,CAAC,CAEDC,UAAU,CAAE,KAAO,CAAAC,IAAI,EAAK,CAC1B,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,iCAAiC,CAAE,CAC9DM,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAC3B,CAAC,CAAC,CAEF,GAAI,CAACN,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuB,CAAC,CAC1C,CAEA,MAAO,MAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAC9B,CAAC,CAEDQ,YAAY,CAAE,KAAO,CAAAC,MAAM,EAAK,CAC9B,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,mCAAmCY,MAAM,WAAW,CAAE,CACjFN,MAAM,CAAE,OACV,CAAC,CAAC,CAEF,GAAI,CAACP,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,yBAAyB,CAAC,CAC5C,CAEA,MAAO,MAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAC9B,CAAC,CAEDU,UAAU,CAAE,KAAO,CAAAD,MAAM,EAAK,CAC5B,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,mCAAmCY,MAAM,EAAE,CAAE,CACxEN,MAAM,CAAE,QACV,CAAC,CAAC,CAEF,GAAI,CAACP,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuB,CAAC,CAC1C,CAEA,MAAO,MAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAC9B,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}