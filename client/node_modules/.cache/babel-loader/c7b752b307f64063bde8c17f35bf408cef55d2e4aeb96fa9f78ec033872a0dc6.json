{"ast":null,"code":"// src/services/api.js\nexport const taskService={createTask:async taskData=>{const response=await fetch('https://webappbackend.netlify.app/.netlify/functions/tasks',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(taskData)});const data=await response.json();if(!response.ok)throw new Error(data.error||'Failed to create task');return data;},deleteTask:async taskId=>{const response=await fetch(`https://webappbackend.netlify.app/.netlify/functions/tasks?id=${taskId}`,{method:'DELETE'});const data=await response.json();if(!response.ok)throw new Error(data.error||'Failed to delete task');return data;},getAllTasks:async()=>{const response=await fetch('https://webappbackend.netlify.app/.netlify/functions/tasks');const data=await response.json();if(!response.ok)throw new Error(data.error||'Failed to fetch tasks');return data;},completeTask:async taskId=>{console.log(\"Complete task logic pending.\");}};","map":{"version":3,"names":["taskService","createTask","taskData","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","error","deleteTask","taskId","getAllTasks","completeTask","console","log"],"sources":["C:/Users/ALIJ/Desktop/EST/deploiement/api-server/client/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\nexport const taskService = {\r\n  createTask: async (taskData) => {\r\n    const response = await fetch('https://webappbackend.netlify.app/.netlify/functions/tasks', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(taskData),\r\n    });\r\n\r\n    const data = await response.json();\r\n    if (!response.ok) throw new Error(data.error || 'Failed to create task');\r\n    return data;\r\n  },\r\n\r\n  deleteTask: async (taskId) => {\r\n    const response = await fetch(`https://webappbackend.netlify.app/.netlify/functions/tasks?id=${taskId}`, {\r\n      method: 'DELETE',\r\n    });\r\n\r\n    const data = await response.json();\r\n    if (!response.ok) throw new Error(data.error || 'Failed to delete task');\r\n    return data;\r\n  },\r\n\r\n  getAllTasks: async () => {\r\n    const response = await fetch('https://webappbackend.netlify.app/.netlify/functions/tasks');\r\n    const data = await response.json();\r\n    if (!response.ok) throw new Error(data.error || 'Failed to fetch tasks');\r\n    return data;\r\n  },\r\n\r\n  completeTask: async (taskId) => {\r\n    console.log(\"Complete task logic pending.\");\r\n  },\r\n};\r\n"],"mappings":"AAAA;AACA,MAAO,MAAM,CAAAA,WAAW,CAAG,CACzBC,UAAU,CAAE,KAAO,CAAAC,QAAQ,EAAK,CAC9B,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,4DAA4D,CAAE,CACzFC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAC/B,CAAC,CAAC,CAEF,KAAM,CAAAQ,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAClC,GAAI,CAACR,QAAQ,CAACS,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAACH,IAAI,CAACI,KAAK,EAAI,uBAAuB,CAAC,CACxE,MAAO,CAAAJ,IAAI,CACb,CAAC,CAEDK,UAAU,CAAE,KAAO,CAAAC,MAAM,EAAK,CAC5B,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,iEAAiEY,MAAM,EAAE,CAAE,CACtGX,MAAM,CAAE,QACV,CAAC,CAAC,CAEF,KAAM,CAAAK,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAClC,GAAI,CAACR,QAAQ,CAACS,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAACH,IAAI,CAACI,KAAK,EAAI,uBAAuB,CAAC,CACxE,MAAO,CAAAJ,IAAI,CACb,CAAC,CAEDO,WAAW,CAAE,KAAAA,CAAA,GAAY,CACvB,KAAM,CAAAd,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,4DAA4D,CAAC,CAC1F,KAAM,CAAAM,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAClC,GAAI,CAACR,QAAQ,CAACS,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAACH,IAAI,CAACI,KAAK,EAAI,uBAAuB,CAAC,CACxE,MAAO,CAAAJ,IAAI,CACb,CAAC,CAEDQ,YAAY,CAAE,KAAO,CAAAF,MAAM,EAAK,CAC9BG,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAC7C,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}