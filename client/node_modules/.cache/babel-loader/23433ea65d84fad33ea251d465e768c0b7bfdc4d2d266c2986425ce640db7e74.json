{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALIJ\\\\Desktop\\\\EST\\\\deploiement\\\\api-server\\\\client\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\n// src/components/TaskPage.js\nimport React, { useEffect, useState } from 'react';\nimport { taskService } from '../services/api';\nimport TaskList from './TaskList';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const fetchedTasks = await taskService.getTasks();\n        setTasks(fetchedTasks);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des tâches:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const handleTaskAdded = newTask => {\n    setTasks([...tasks, newTask]);\n  };\n  const handleTaskDelete = taskId => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n  const handleTaskComplete = taskId => {\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: true\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onTaskAdded: handleTaskAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onTaskDelete: handleTaskDelete,\n      onTaskComplete: handleTaskComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskPage, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskPage;\nexport default TaskPage;\nvar _c;\n$RefreshReg$(_c, \"TaskPage\");","map":{"version":3,"names":["React","useEffect","useState","taskService","TaskList","TaskForm","jsxDEV","_jsxDEV","TaskPage","_s","tasks","setTasks","fetchTasks","fetchedTasks","getTasks","error","console","handleTaskAdded","newTask","handleTaskDelete","taskId","filter","task","id","handleTaskComplete","map","completed","children","onTaskAdded","fileName","_jsxFileName","lineNumber","columnNumber","onTaskDelete","onTaskComplete","_c","$RefreshReg$"],"sources":["C:/Users/ALIJ/Desktop/EST/deploiement/api-server/client/src/components/TaskList.js"],"sourcesContent":["// src/components/TaskPage.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { taskService } from '../services/api';\r\nimport TaskList from './TaskList';\r\nimport TaskForm from './TaskForm';\r\n\r\nconst TaskPage = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const fetchedTasks = await taskService.getTasks();\r\n        setTasks(fetchedTasks);\r\n      } catch (error) {\r\n        console.error('Erreur lors de la récupération des tâches:', error);\r\n      }\r\n    };\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const handleTaskAdded = (newTask) => {\r\n    setTasks([...tasks, newTask]);\r\n  };\r\n\r\n  const handleTaskDelete = (taskId) => {\r\n    setTasks(tasks.filter((task) => task.id !== taskId));\r\n  };\r\n\r\n  const handleTaskComplete = (taskId) => {\r\n    setTasks(\r\n      tasks.map((task) =>\r\n        task.id === taskId ? { ...task, completed: true } : task\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TaskForm onTaskAdded={handleTaskAdded} />\r\n      <TaskList\r\n        tasks={tasks}\r\n        onTaskDelete={handleTaskDelete}\r\n        onTaskComplete={handleTaskComplete}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskPage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,YAAY,GAAG,MAAMV,WAAW,CAACW,QAAQ,CAAC,CAAC;QACjDH,QAAQ,CAACE,YAAY,CAAC;MACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MACpE;IACF,CAAC;IACDH,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,eAAe,GAAIC,OAAO,IAAK;IACnCP,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEQ,OAAO,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMC,gBAAgB,GAAIC,MAAM,IAAK;IACnCT,QAAQ,CAACD,KAAK,CAACW,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKH,MAAM,CAAC,CAAC;EACtD,CAAC;EAED,MAAMI,kBAAkB,GAAIJ,MAAM,IAAK;IACrCT,QAAQ,CACND,KAAK,CAACe,GAAG,CAAEH,IAAI,IACbA,IAAI,CAACC,EAAE,KAAKH,MAAM,GAAG;MAAE,GAAGE,IAAI;MAAEI,SAAS,EAAE;IAAK,CAAC,GAAGJ,IACtD,CACF,CAAC;EACH,CAAC;EAED,oBACEf,OAAA;IAAAoB,QAAA,gBACEpB,OAAA,CAACF,QAAQ;MAACuB,WAAW,EAAEX;IAAgB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1CzB,OAAA,CAACH,QAAQ;MACPM,KAAK,EAAEA,KAAM;MACbuB,YAAY,EAAEd,gBAAiB;MAC/Be,cAAc,EAAEV;IAAmB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACvB,EAAA,CAzCID,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}